// <auto-generated />
using System;
using MagicVilla_API.Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MagicVilla_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MagicVilla_API.Modelos.Villa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Amenidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaAcualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagenUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MetrosCuadrados")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ocupantes")
                        .HasColumnType("int");

                    b.Property<double>("Tarifa")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Villas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amenidad = "",
                            Detalle = "iniciando con los registros",
                            FechaAcualizacion = new DateTime(2023, 7, 22, 7, 47, 32, 737, DateTimeKind.Local).AddTicks(7987),
                            FechaCreacion = new DateTime(2023, 7, 22, 7, 47, 32, 737, DateTimeKind.Local).AddTicks(7973),
                            ImagenUrl = "",
                            MetrosCuadrados = 5.0,
                            Nombre = "Primera villa",
                            Ocupantes = 5,
                            Tarifa = 2000.0
                        },
                        new
                        {
                            Id = 2,
                            Amenidad = "",
                            Detalle = "segundo registro",
                            FechaAcualizacion = new DateTime(2023, 7, 22, 7, 47, 32, 737, DateTimeKind.Local).AddTicks(7991),
                            FechaCreacion = new DateTime(2023, 7, 22, 7, 47, 32, 737, DateTimeKind.Local).AddTicks(7990),
                            ImagenUrl = "",
                            MetrosCuadrados = 15.0,
                            Nombre = "segunda villa",
                            Ocupantes = 15,
                            Tarifa = 25000.0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
